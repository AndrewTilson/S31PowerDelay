# Basic Config
esphome:
  name: skimmer
  platform: ESP8266
  board: esp12e
  on_boot:
    then:
      - script.execute: script_delay_power_on

wifi:
  ssid: "xxxx"
  password: "xxxx"
  ap:
    ssid: "s31 hotspot"
    password: ""

ota:
  platform: esphome

# Enable web interface
web_server:
  port: 80
  include_internal: true

# Device Specific Config

logger:
  baud_rate: 0 # (UART logging interferes with cse7766)
  logs:
    sensor: DEBUG # (Overide any global setting, to VERBOSE will spamming the cse7766 sensors)

uart:
  rx_pin: RX
  baud_rate: 4800
  parity: EVEN

globals:
  - id: delay_time
    type: int
    restore_value: yes
    initial_value: "600" # initial value is 600 seconds (10 minutes)

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "Sonoff S31 Button"
    on_press:
      - switch.toggle: relay
      - script.stop: script_delay_power_on
  - platform: status
    name: "Sonoff S31 Status"

sensor:
  - platform: wifi_signal
    name: "Sonoff S31 WiFi Signal"
    update_interval: 60s
  - platform: template
    name: "Script Delay Power On Status"
    id: script_delay_power_on_status
    lambda: |-
      return id(script_delay_power_on).is_running();
    update_interval: 10s
  - platform: cse7766
    current:
      name: "Sonoff S31 Current"
      accuracy_decimals: 2
      filters:
        - throttle_average: 60s
    voltage:
      name: "Sonoff S31 Voltage"
      accuracy_decimals: 2
      filters:
        - throttle_average: 60s
    power:
      name: "Sonoff S31 Power"
      accuracy_decimals: 2
      id: my_power
      filters:
        - throttle_average: 60s
    energy:
      name: "Sonoff S31 Energy"
      accuracy_decimals: 2
      filters:
        - throttle: 60s
    apparent_power: #(only available with version 2024.3.0 or greater)
      name: "Sonoff S31 Apparent Power"
      filters:
        - throttle_average: 60s
    power_factor: #(only available with version 2024.3.0 or greater)
      name: "Sonoff S31 Power Factor"
      accuracy_decimals: 2
      filters:
        - throttle_average: 60s

  - platform: total_daily_energy #(Optional, not specific to cse7766)
    name: "Sonoff S31 Daily Energy"
    power_id: my_power
    accuracy_decimals: 2

switch:
  - platform: gpio
    name: "Sonoff S31 Relay"
    pin: GPIO12
    id: relay
    restore_mode: ALWAYS_OFF
  - platform: restart
    name: "Restart Device"
number:
  - platform: template
    name: "Delay Time"
    id: delay_time_number
    min_value: 0
    max_value: 3600 # maximum value 3600 seconds (1 hour)
    step: 1
    lambda: |-
      return id(delay_time);
    set_action:
      - lambda: |-
          id(delay_time) = (int)(x);

time:
  - platform: sntp #(required for total_daily_energy)
    id: my_time

status_led:
  pin:
    number: GPIO13
    inverted: True

script:
  - id: script_delay_power_on
    then:
      - delay: !lambda "return id(delay_time) * 1000;"
      - switch.turn_on: relay
      - script.stop: script_delay_power_on
